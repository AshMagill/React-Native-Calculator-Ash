{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport CalculationDisplay from \"./components/CalculationDisplay\";\nimport MemoryButtons from \"./components/MemoryButtons\";\nimport InputGrid from \"./components/InputGrid\";\nimport HistoryButton from \"./components/HistoryButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentCalculation = _useState2[0],\n    setCurrentCalculation = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    firstOperand = _useState4[0],\n    setFirstOperand = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    secondOperand = _useState6[0],\n    setSecondOperand = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    operator = _useState8[0],\n    setOperator = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    result = _useState10[0],\n    setResult = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    finishedOperation = _useState12[0],\n    setFinishedOperation = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isDropdownOpen = _useState14[0],\n    setIsDropdownOpen = _useState14[1];\n  var _useState15 = useState(\"[]\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    historyData = _useState16[0],\n    setHistoryData = _useState16[1];\n  var wipeHistory = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem(\"history\");\n      } catch (error) {\n        console.log(\"wipe history: \" + error.message);\n      }\n    });\n    return function wipeHistory() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getHistory = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var value = JSON.parse(yield AsyncStorage.getItem(\"history\"));\n        if (value !== null) {\n          setHistoryData(value);\n        }\n      } catch (error) {\n        console.log(\"get history: \" + error.message);\n      }\n    });\n    return function getHistory() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(getHistory, [toggleDropDownHandler()]);\n  var storeHistory = function () {\n    var _ref3 = _asyncToGenerator(function* (value) {\n      var oldHistory = yield AsyncStorage.getItem(\"history\");\n      if (oldHistory === null) {\n        console.log(\"no history database, creating one..\");\n        yield AsyncStorage.setItem(\"history\", \"[]\");\n      }\n      console.log(\"persisting data exists, fetching now..\");\n      try {\n        var valueObject = {\n          label: value,\n          value: moment().valueOf()\n        };\n        var oldHistoy = yield AsyncStorage.getItem(\"history\");\n        var parsedOldHistory = JSON.parse(oldHistoy);\n        var updatedHistory = [].concat(_toConsumableArray(parsedOldHistory), [valueObject]);\n        yield AsyncStorage.setItem(\"history\", JSON.stringify(updatedHistory));\n      } catch (error) {\n        console.log(\"store history: \" + error.message);\n      }\n    });\n    return function storeHistory(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var buttonClickedHandler = function buttonClickedHandler(char) {\n    if (finishedOperation === true) {\n      deletecurrrentCalculation();\n    }\n    if (result) {\n      return;\n    }\n    if (isFirstOperand(char) && typeof char == \"number\" || isFirstOperand(char) && char === \".\") {\n      setFirstOperand(function (number) {\n        return number + char;\n      });\n    } else if (isSecondOperand(char)) {\n      if (char === \"=\" && secondOperand) {\n        setFinishedOperation(true);\n        calculateResult();\n      } else {\n        setSecondOperand(function (number) {\n          return number + char;\n        });\n      }\n    } else if (firstOperand && isOperator(char)) {\n      setOperator(char);\n    }\n  };\n  var deleteRecentInputHandler = function deleteRecentInputHandler() {\n    setResult(\"\");\n    if (secondOperand) {\n      setSecondOperand(\"\");\n    } else if (operator) {\n      setOperator(\"\");\n    } else if (firstOperand) {\n      setFirstOperand(\"\");\n    }\n  };\n  var deletecurrrentCalculation = function deletecurrrentCalculation() {\n    setResult(\"\");\n    setOperator(\"\");\n    setFirstOperand(\"\");\n    setSecondOperand(\"\");\n    setFinishedOperation(false);\n  };\n  var isFirstOperand = function isFirstOperand(char) {\n    return !operator && !isOperator(char);\n  };\n  var isSecondOperand = function isSecondOperand(char) {\n    return operator && !isOperator(char);\n  };\n  var isOperator = function isOperator(char) {\n    return char === \"+\" || char === \"-\" || char === \"*\" || char === \"/\";\n  };\n  var calculateResult = function calculateResult() {\n    if (operator === \"-\") {\n      setResult((parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1);\n      storeHistory(firstOperand + \"  \" + operator + \" \" + secondOperand + \" : \" + (parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1);\n    } else if (operator === \"/\") {\n      setResult((parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1);\n      setHistory(firstOperand + \"  \" + operator + \" \" + secondOperand + \" : \" + (parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1);\n    } else if (operator === \"*\") {\n      setResult((parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1);\n      setHistory(firstOperand + \"  \" + operator + \" \" + secondOperand + \" : \" + (parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1);\n    }\n  };\n  useEffect(function () {\n    var equalSign = \"\";\n    if (result) {\n      equalSign = \"=\";\n    }\n    setCurrentCalculation(firstOperand + \" \" + operator + \" \" + secondOperand + \" \" + equalSign + \" \" + result);\n  }, [result, firstOperand, secondOperand, operator]);\n  var toggleDropDownHandler = function toggleDropDownHandler(open) {\n    open ? setIsDropdownOpen(true) : setIsDropdownOpen(false);\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(CalculationDisplay, {\n        calculationText: currentCalculation\n      }), _jsx(MemoryButtons, {\n        wipeMemoryHandler: wipeHistory,\n        onDelete: deleteRecentInputHandler\n      }), !isDropdownOpen && _jsx(InputGrid, {\n        onButton: buttonClickedHandler\n      }), _jsx(HistoryButton, {\n        HistoryData: historyData,\n        toggleDropDownHandler: toggleDropDownHandler\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: 950,\n    backgroundColor: \"#1A1A1A\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  scrollview: {\n    backgroundColor: \"black\"\n  },\n  dropdown: {\n    alignItems: \"center\",\n    height: \"auto\"\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","SafeAreaView","useEffect","useState","moment","AsyncStorage","CalculationDisplay","MemoryButtons","InputGrid","HistoryButton","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","currentCalculation","setCurrentCalculation","_useState3","_useState4","firstOperand","setFirstOperand","_useState5","_useState6","secondOperand","setSecondOperand","_useState7","_useState8","operator","setOperator","_useState9","_useState10","result","setResult","_useState11","_useState12","finishedOperation","setFinishedOperation","_useState13","_useState14","isDropdownOpen","setIsDropdownOpen","_useState15","_useState16","historyData","setHistoryData","wipeHistory","_ref","_asyncToGenerator","removeItem","error","console","log","message","apply","arguments","getHistory","_ref2","value","JSON","parse","getItem","toggleDropDownHandler","storeHistory","_ref3","oldHistory","setItem","valueObject","label","valueOf","oldHistoy","parsedOldHistory","updatedHistory","concat","_toConsumableArray","stringify","_x","buttonClickedHandler","char","deletecurrrentCalculation","isFirstOperand","number","isSecondOperand","calculateResult","isOperator","deleteRecentInputHandler","parseFloat","toFixed","setHistory","equalSign","open","children","style","styles","container","calculationText","wipeMemoryHandler","onDelete","onButton","HistoryData","create","height","backgroundColor","alignItems","justifyContent","scrollview","dropdown"],"sources":["/home/ash/Projects/School/CalculatorProject/React-Native-Calculator-Ash/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View, SafeAreaView } from \"react-native\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// main components\nimport CalculationDisplay from \"./components/CalculationDisplay\";\nimport MemoryButtons from \"./components/MemoryButtons\";\nimport InputGrid from \"./components/InputGrid\";\nimport HistoryButton from \"./components/HistoryButton\";\n\nexport default function App() {\n  // STATE\n  const [currentCalculation, setCurrentCalculation] = useState(\"\");\n  const [firstOperand, setFirstOperand] = useState(\"\");\n  const [secondOperand, setSecondOperand] = useState(\"\");\n  const [operator, setOperator] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [finishedOperation, setFinishedOperation] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [historyData, setHistoryData] = useState(\"[]\");\n\n  // PERSISTING MEMORY WITH ASYNC STORAGE\n  // wipe data\n  const wipeHistory = async () => {\n    try {\n      await AsyncStorage.removeItem(\"history\");\n    } catch (error) {\n      console.log(\"wipe history: \" + error.message);\n    }\n  };\n\n  //wipeHistory();\n\n  // get data\n  const getHistory = async () => {\n    try {\n      const value = JSON.parse(await AsyncStorage.getItem(\"history\"));\n      if (value !== null) {\n        // We have data!!\n        setHistoryData(value);\n      }\n    } catch (error) {\n      console.log(\"get history: \" + error.message);\n    }\n  };\n\n  useEffect(getHistory, [toggleDropDownHandler()]);\n\n  // storing data\n  const storeHistory = async (value) => {\n    // if an array already exists, push new value to it\n    const oldHistory = await AsyncStorage.getItem(\"history\");\n    if (oldHistory === null) {\n      console.log(\"no history database, creating one..\");\n      // initialsie the database as an empty array\n      await AsyncStorage.setItem(\"history\", \"[]\");\n    }\n    console.log(\"persisting data exists, fetching now..\");\n    //creates an object based on the value and current time\n    try {\n      const valueObject = {\n        label: value,\n        value: moment().valueOf(),\n      };\n      // fetches the old history\n      let oldHistoy = await AsyncStorage.getItem(\"history\");\n      // parses old history\n      const parsedOldHistory = JSON.parse(oldHistoy);\n      // updates the old history by adding new value\n      const updatedHistory = [...parsedOldHistory, valueObject];\n      // save updated history\n      await AsyncStorage.setItem(\"history\", JSON.stringify(updatedHistory));\n    } catch (error) {\n      console.log(\"store history: \" + error.message);\n    }\n  };\n\n  // Wipes History whenever these\n  //useEffect(getHistory(), [storeHistory, wipeHistory]);\n\n  // CALCULATIONS\n  // this function is sent to the onCick prop in the buttons\n  const buttonClickedHandler = (char) => {\n    if (finishedOperation === true) {\n      deletecurrrentCalculation();\n    }\n    // if the result aready exist it exits the function\n    if (result) {\n      return;\n    }\n    if (\n      // checks if if function isFirstOperand returns true and if the character is either a type on number or a decimal\n      // if true sets first operand\n      (isFirstOperand(char) && typeof char == \"number\") ||\n      (isFirstOperand(char) && char === \".\")\n    ) {\n      setFirstOperand((number) => number + char);\n      // checks if function isSecondOperand returns true and if the character is a '=' symbol\n      // if true executes calculate result callback function\n    } else if (isSecondOperand(char)) {\n      if (char === \"=\" && secondOperand) {\n        setFinishedOperation(true);\n        calculateResult();\n      } else {\n        // if function isSecondOperand returns true and character is not '='\n        // if true sets second operand\n        setSecondOperand((number) => number + char);\n      }\n      // if none of the above requirements are fufilled, the character must be an operator and is assigned as such\n    } else if (firstOperand && isOperator(char)) {\n      setOperator(char);\n    }\n  };\n\n  // sequentially wipes the most recent inputs\n  const deleteRecentInputHandler = () => {\n    setResult(\"\");\n    if (secondOperand) {\n      setSecondOperand(\"\");\n    } else if (operator) {\n      setOperator(\"\");\n    } else if (firstOperand) {\n      setFirstOperand(\"\");\n    }\n  };\n\n  // deletes current calculation in display when a new one is entered\n  const deletecurrrentCalculation = () => {\n    setResult(\"\");\n    setOperator(\"\");\n    setFirstOperand(\"\");\n    setSecondOperand(\"\");\n    setFinishedOperation(false);\n  };\n\n  // returns a boolean of true if there is not already an operator first input + the input is a number\n  const isFirstOperand = (char) => {\n    return !operator && !isOperator(char);\n  };\n\n  // returns a boolean of true if there is already a first input + the input is a number\n  const isSecondOperand = (char) => {\n    return operator && !isOperator(char);\n  };\n\n  // retrurns a boolean of true if the input is an operator\n  const isOperator = (char) => {\n    return char === \"+\" || char === \"-\" || char === \"*\" || char === \"/\";\n  };\n\n  // takes the operator, the first operand and the second operand and returns the calculation\n  // also rounds the decimals to 2 places and removes trailing zeros\n  // the calculation is saved in state for display and then its added to history with AsyncStorage\n  const calculateResult = () => {\n    if (operator === \"-\") {\n      setResult(\n        (parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1\n      );\n      storeHistory(\n        `${firstOperand}  ${operator} ${secondOperand} : ${\n          (parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1\n        }`\n      );\n    } else if (operator === \"/\") {\n      setResult(\n        (parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1\n      );\n      setHistory(\n        `${firstOperand}  ${operator} ${secondOperand} : ${\n          (parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1\n        }`\n      );\n    } else if (operator === \"*\") {\n      setResult(\n        (parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1\n      );\n      setHistory(\n        `${firstOperand}  ${operator} ${secondOperand} : ${\n          (parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1\n        }`\n      );\n    }\n  };\n\n  // if the result exists, dispaly an equalSign in the calculation, otherwise wait to add it\n  useEffect(() => {\n    let equalSign = \"\";\n    if (result) {\n      equalSign = \"=\";\n    }\n\n    // sets the current calculation to string\n    setCurrentCalculation(\n      `${firstOperand} ${operator} ${secondOperand} ${equalSign} ${result}`\n    );\n  }, [result, firstOperand, secondOperand, operator]);\n\n  const toggleDropDownHandler = (open) => {\n    open ? setIsDropdownOpen(true) : setIsDropdownOpen(false);\n  };\n\n  return (\n    <SafeAreaView>\n      <View style={styles.container}>\n        <StatusBar style=\"auto\" />\n        <CalculationDisplay calculationText={currentCalculation} />\n        <MemoryButtons\n          wipeMemoryHandler={wipeHistory}\n          onDelete={deleteRecentInputHandler}\n        />\n        {!isDropdownOpen && <InputGrid onButton={buttonClickedHandler} />}\n        <HistoryButton\n          HistoryData={historyData}\n          toggleDropDownHandler={toggleDropDownHandler}\n        />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 950,\n    backgroundColor: \"#1A1A1A\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  scrollview: {\n    backgroundColor: \"black\",\n  },\n  dropdown: {\n    alignItems: \"center\",\n    height: \"auto\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}