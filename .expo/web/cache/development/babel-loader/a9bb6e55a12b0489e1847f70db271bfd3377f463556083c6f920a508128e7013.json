{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useEffect, useState } from \"react\";\nimport CalculationDisplay from \"./components/CalculationDisplay\";\nimport MemoryButtons from \"./components/MemoryButtons\";\nimport InputGrid from \"./components/InputGrid\";\nimport DropDownButton from \"./components/DropDownButton\";\nimport HistoryDropDown from \"./components/HistoryDropDown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentCalculation = _useState2[0],\n    setCurrentCalculation = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    firstOperand = _useState4[0],\n    setFirstOperand = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    secondOperand = _useState6[0],\n    setSecondOperand = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    operator = _useState8[0],\n    setOperator = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    result = _useState10[0],\n    setResult = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    finishedOperation = _useState12[0],\n    setFinishedOperation = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    history = _useState14[0],\n    setHistory = _useState14[1];\n  var buttonClickedHandler = function buttonClickedHandler(char) {\n    if (finishedOperation === true) {\n      deletecurrrentCalculation();\n    }\n    if (result) {\n      return;\n    }\n    if (isFirstOperand(char) && typeof char == \"number\" || isFirstOperand(char) && char === \".\") {\n      setFirstOperand(function (number) {\n        return number + char;\n      });\n    } else if (isSecondOperand(char)) {\n      if (char === \"=\" && secondOperand) {\n        setFinishedOperation(true);\n        calculateResult();\n      } else {\n        setSecondOperand(function (number) {\n          return number + char;\n        });\n      }\n    } else if (firstOperand && isOperator(char)) {\n      setOperator(char);\n    }\n  };\n  var deleteRecentInputHandler = function deleteRecentInputHandler() {\n    setResult(\"\");\n    if (secondOperand) {\n      setSecondOperand(\"\");\n    } else if (operator) {\n      setOperator(\"\");\n    } else if (firstOperand) {\n      setFirstOperand(\"\");\n    }\n  };\n  var deletecurrrentCalculation = function deletecurrrentCalculation() {\n    setResult(\"\");\n    setOperator(\"\");\n    setFirstOperand(\"\");\n    setSecondOperand(\"\");\n    setFinishedOperation(false);\n  };\n  var isFirstOperand = function isFirstOperand(char) {\n    return !operator && !isOperator(char);\n  };\n  var isSecondOperand = function isSecondOperand(char) {\n    return operator && !isOperator(char);\n  };\n  var isOperator = function isOperator(char) {\n    return char === \"+\" || char === \"-\" || char === \"*\" || char === \"/\";\n  };\n  var calculateResult = function calculateResult() {\n    if (operator === \"+\") {\n      setResult((parseFloat(firstOperand) + parseFloat(secondOperand)).toFixed(2) * 1);\n      setHistory(firstOperand + \"  \" + operator + \" \" + secondOperand + \" : \" + (parseFloat(firstOperand) + parseFloat(secondOperand)).toFixed(2) * 1);\n    } else if (operator === \"-\") {\n      setResult((parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1);\n      setHistory(firstOperand + \"  \" + operator + \" \" + secondOperand + \" : \" + (parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1);\n    } else if (operator === \"/\") {\n      setResult((parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1);\n      setHistory(firstOperand + \"  \" + operator + \" \" + secondOperand + \" : \" + (parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1);\n    } else if (operator === \"*\") {\n      setResult((parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1);\n      setHistory(firstOperand + \"  \" + operator + \" \" + secondOperand + \" : \" + (parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1);\n    }\n  };\n  useEffect(function () {\n    var equalSign = \"\";\n    if (result) {\n      equalSign = \":\";\n    }\n    setCurrentCalculation(firstOperand + \" \" + operator + \" \" + secondOperand + \" \" + equalSign + \" \" + result);\n  }, [result, firstOperand, secondOperand, operator]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(CalculationDisplay, {}), _jsx(MemoryButtons, {}), _jsx(InputGrid, {}), _jsx(DropDownButton, {}), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#1A1A1A\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","FlatList","useEffect","useState","CalculationDisplay","MemoryButtons","InputGrid","DropDownButton","HistoryDropDown","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","currentCalculation","setCurrentCalculation","_useState3","_useState4","firstOperand","setFirstOperand","_useState5","_useState6","secondOperand","setSecondOperand","_useState7","_useState8","operator","setOperator","_useState9","_useState10","result","setResult","_useState11","_useState12","finishedOperation","setFinishedOperation","_useState13","_useState14","history","setHistory","buttonClickedHandler","char","deletecurrrentCalculation","isFirstOperand","number","isSecondOperand","calculateResult","isOperator","deleteRecentInputHandler","parseFloat","toFixed","equalSign","style","styles","container","children","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/ash/Projects/School/CalculatorProject/React-Native-Calculator-Ash/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, FlatList } from \"react-native\";\nimport { useEffect, useState } from \"react\";\n\n// main components\nimport CalculationDisplay from \"./components/CalculationDisplay\";\nimport MemoryButtons from \"./components/MemoryButtons\";\nimport InputGrid from \"./components/InputGrid\";\nimport DropDownButton from \"./components/DropDownButton\";\nimport HistoryDropDown from \"./components/HistoryDropDown\";\n\nexport default function App() {\n  const [currentCalculation, setCurrentCalculation] = useState(\"\");\n  const [firstOperand, setFirstOperand] = useState(\"\");\n  const [secondOperand, setSecondOperand] = useState(\"\");\n  const [operator, setOperator] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [finishedOperation, setFinishedOperation] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  // this function is sent to the onCick prop in the buttons\n  const buttonClickedHandler = (char) => {\n    if (finishedOperation === true) {\n      deletecurrrentCalculation();\n    }\n    // if the result aready exist it exits the function\n    if (result) {\n      return;\n    }\n\n    if (\n      // checks if if function isFirstOperand returns true and if the character is either a type on number or a decimal\n      // if true sets first operand\n      (isFirstOperand(char) && typeof char == \"number\") ||\n      (isFirstOperand(char) && char === \".\")\n    ) {\n      setFirstOperand((number) => number + char);\n      // checks if function isSecondOperand returns true and if the character is a '=' symbol\n      // if true executes calculate result callback function\n    } else if (isSecondOperand(char)) {\n      if (char === \"=\" && secondOperand) {\n        setFinishedOperation(true);\n        calculateResult();\n      } else {\n        // if function isSecondOperand returns true and character is not '='\n        // if true sets second operand\n        setSecondOperand((number) => number + char);\n      }\n      // if none of the above requirements are fufilled, the character must be an operator and is assigned as such\n    } else if (firstOperand && isOperator(char)) {\n      setOperator(char);\n    }\n  };\n\n  // sequentially wipes the most recent inputs\n  const deleteRecentInputHandler = () => {\n    setResult(\"\");\n    if (secondOperand) {\n      setSecondOperand(\"\");\n    } else if (operator) {\n      setOperator(\"\");\n    } else if (firstOperand) {\n      setFirstOperand(\"\");\n    }\n  };\n\n  const deletecurrrentCalculation = () => {\n    setResult(\"\");\n    setOperator(\"\");\n    setFirstOperand(\"\");\n    setSecondOperand(\"\");\n    setFinishedOperation(false);\n  };\n\n  // returns a boolean of true if there is not already an operator first input + the input is a number\n  const isFirstOperand = (char) => {\n    return !operator && !isOperator(char);\n  };\n\n  // returns a boolean of true if there is already a first input + the input is a number\n  const isSecondOperand = (char) => {\n    return operator && !isOperator(char);\n  };\n\n  // retrurns a boolean of true if the input is an operator\n  const isOperator = (char) => {\n    return char === \"+\" || char === \"-\" || char === \"*\" || char === \"/\";\n  };\n\n  // TODO make this a switch statement\n  // takes the operator, the first operand and the second operand and returns the calculation\n  // also rounds the decimals to 2 places and removes trailing zeros\n  // the calculation is saved in state\n  //TODO setHistory needs to be replaced with logic for React Native Storage in accordance with AC for calculator project\n  const calculateResult = () => {\n    if (operator === \"+\") {\n      setResult(\n        (parseFloat(firstOperand) + parseFloat(secondOperand)).toFixed(2) * 1\n      );\n      setHistory(\n        `${firstOperand}  ${operator} ${secondOperand} : ${\n          (parseFloat(firstOperand) + parseFloat(secondOperand)).toFixed(2) * 1\n        }`\n      );\n    } else if (operator === \"-\") {\n      setResult(\n        (parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1\n      );\n      setHistory(\n        `${firstOperand}  ${operator} ${secondOperand} : ${\n          (parseFloat(firstOperand) - parseFloat(secondOperand)).toFixed(2) * 1\n        }`\n      );\n    } else if (operator === \"/\") {\n      setResult(\n        (parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1\n      );\n      setHistory(\n        `${firstOperand}  ${operator} ${secondOperand} : ${\n          (parseFloat(firstOperand) / parseFloat(secondOperand)).toFixed(2) * 1\n        }`\n      );\n    } else if (operator === \"*\") {\n      setResult(\n        (parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1\n      );\n      setHistory(\n        `${firstOperand}  ${operator} ${secondOperand} : ${\n          (parseFloat(firstOperand) * parseFloat(secondOperand)).toFixed(2) * 1\n        }`\n      );\n    }\n  };\n\n  // sets the current calculation every time the dependancies are altered\n  // the ':' character is not shown unless the result is truthy\n  useEffect(() => {\n    let equalSign = \"\";\n    if (result) {\n      equalSign = \":\";\n    }\n    setCurrentCalculation(\n      `${firstOperand} ${operator} ${secondOperand} ${equalSign} ${result}`\n    );\n  }, [result, firstOperand, secondOperand, operator]);\n\n  return (\n    <View style={styles.container}>\n      <CalculationDisplay />\n      <MemoryButtons />\n      <InputGrid />\n      <DropDownButton />\n      {/*everthing above dropdown should be wrapped in a different view*/}\n      {/*this way when the dropdown is acitvated, it wont mess up the % in heigt for the other stuff*/}\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#1A1A1A\",\n    // will these settings cause issues later? we will see..\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,OAAOC,kBAAkB;AACzB,OAAOC,aAAa;AACpB,OAAOC,SAAS;AAChB,OAAOC,cAAc;AACrB,OAAOC,eAAe;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAoDX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzDG,kBAAkB,GAAAF,UAAA;IAAEG,qBAAqB,GAAAH,UAAA;EAChD,IAAAI,UAAA,GAAwChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA0CpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAgCxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA4B5B,QAAQ,CAAC,EAAE,CAAC;IAAA6B,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAjCE,MAAM,GAAAD,WAAA;IAAEE,SAAS,GAAAF,WAAA;EACxB,IAAAG,WAAA,GAAkDhC,QAAQ,CAAC,KAAK,CAAC;IAAAiC,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAA1DE,iBAAiB,GAAAD,WAAA;IAAEE,oBAAoB,GAAAF,WAAA;EAC9C,IAAAG,WAAA,GAA8BpC,QAAQ,CAAC,EAAE,CAAC;IAAAqC,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAAnCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAG1B,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,IAAI,EAAK;IACrC,IAAIP,iBAAiB,KAAK,IAAI,EAAE;MAC9BQ,yBAAyB,CAAC,CAAC;IAC7B;IAEA,IAAIZ,MAAM,EAAE;MACV;IACF;IAEA,IAGGa,cAAc,CAACF,IAAI,CAAC,IAAI,OAAOA,IAAI,IAAI,QAAQ,IAC/CE,cAAc,CAACF,IAAI,CAAC,IAAIA,IAAI,KAAK,GAAI,EACtC;MACAtB,eAAe,CAAC,UAACyB,MAAM;QAAA,OAAKA,MAAM,GAAGH,IAAI;MAAA,EAAC;IAG5C,CAAC,MAAM,IAAII,eAAe,CAACJ,IAAI,CAAC,EAAE;MAChC,IAAIA,IAAI,KAAK,GAAG,IAAInB,aAAa,EAAE;QACjCa,oBAAoB,CAAC,IAAI,CAAC;QAC1BW,eAAe,CAAC,CAAC;MACnB,CAAC,MAAM;QAGLvB,gBAAgB,CAAC,UAACqB,MAAM;UAAA,OAAKA,MAAM,GAAGH,IAAI;QAAA,EAAC;MAC7C;IAEF,CAAC,MAAM,IAAIvB,YAAY,IAAI6B,UAAU,CAACN,IAAI,CAAC,EAAE;MAC3Cd,WAAW,CAACc,IAAI,CAAC;IACnB;EACF,CAAC;EAGD,IAAMO,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;IACrCjB,SAAS,CAAC,EAAE,CAAC;IACb,IAAIT,aAAa,EAAE;MACjBC,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,MAAM,IAAIG,QAAQ,EAAE;MACnBC,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,MAAM,IAAIT,YAAY,EAAE;MACvBC,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,IAAMuB,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;IACtCX,SAAS,CAAC,EAAE,CAAC;IACbJ,WAAW,CAAC,EAAE,CAAC;IACfR,eAAe,CAAC,EAAE,CAAC;IACnBI,gBAAgB,CAAC,EAAE,CAAC;IACpBY,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAGD,IAAMQ,cAAc,GAAG,SAAjBA,cAAcA,CAAIF,IAAI,EAAK;IAC/B,OAAO,CAACf,QAAQ,IAAI,CAACqB,UAAU,CAACN,IAAI,CAAC;EACvC,CAAC;EAGD,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAIJ,IAAI,EAAK;IAChC,OAAOf,QAAQ,IAAI,CAACqB,UAAU,CAACN,IAAI,CAAC;EACtC,CAAC;EAGD,IAAMM,UAAU,GAAG,SAAbA,UAAUA,CAAIN,IAAI,EAAK;IAC3B,OAAOA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG;EACrE,CAAC;EAOD,IAAMK,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAIpB,QAAQ,KAAK,GAAG,EAAE;MACpBK,SAAS,CACP,CAACkB,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CACtE,CAAC;MACDX,UAAU,CACLrB,YAAY,UAAKQ,QAAQ,SAAIJ,aAAa,WAC3C,CAAC2B,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CAExE,CAAC;IACH,CAAC,MAAM,IAAIxB,QAAQ,KAAK,GAAG,EAAE;MAC3BK,SAAS,CACP,CAACkB,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CACtE,CAAC;MACDX,UAAU,CACLrB,YAAY,UAAKQ,QAAQ,SAAIJ,aAAa,WAC3C,CAAC2B,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CAExE,CAAC;IACH,CAAC,MAAM,IAAIxB,QAAQ,KAAK,GAAG,EAAE;MAC3BK,SAAS,CACP,CAACkB,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CACtE,CAAC;MACDX,UAAU,CACLrB,YAAY,UAAKQ,QAAQ,SAAIJ,aAAa,WAC3C,CAAC2B,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CAExE,CAAC;IACH,CAAC,MAAM,IAAIxB,QAAQ,KAAK,GAAG,EAAE;MAC3BK,SAAS,CACP,CAACkB,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CACtE,CAAC;MACDX,UAAU,CACLrB,YAAY,UAAKQ,QAAQ,SAAIJ,aAAa,WAC3C,CAAC2B,UAAU,CAAC/B,YAAY,CAAC,GAAG+B,UAAU,CAAC3B,aAAa,CAAC,EAAE4B,OAAO,CAAC,CAAC,CAAC,GAAG,CAExE,CAAC;IACH;EACF,CAAC;EAIDnD,SAAS,CAAC,YAAM;IACd,IAAIoD,SAAS,GAAG,EAAE;IAClB,IAAIrB,MAAM,EAAE;MACVqB,SAAS,GAAG,GAAG;IACjB;IACApC,qBAAqB,CAChBG,YAAY,SAAIQ,QAAQ,SAAIJ,aAAa,SAAI6B,SAAS,SAAIrB,MAC/D,CAAC;EACH,CAAC,EAAE,CAACA,MAAM,EAAEZ,YAAY,EAAEI,aAAa,EAAEI,QAAQ,CAAC,CAAC;EAEnD,OACEjB,KAAA,CAACZ,IAAI;IAACuD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhD,IAAA,CAACN,kBAAkB,IAAE,CAAC,EACtBM,IAAA,CAACL,aAAa,IAAE,CAAC,EACjBK,IAAA,CAACJ,SAAS,IAAE,CAAC,EACbI,IAAA,CAACH,cAAc,IAAE,CAAC,EAGlBG,IAAA,CAACb,SAAS;MAAC0D,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAEA,IAAMC,MAAM,GAAG1D,UAAU,CAAC6D,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAE1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}